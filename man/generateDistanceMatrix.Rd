% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateDistanceRankMatrix.R
\name{generateDistanceMatrix}
\alias{generateDistanceMatrix}
\title{Generate Distance Matrix}
\usage{
generateDistanceMatrix(embeddingMatrix, metric = "euclidean", threads = NULL)
}
\arguments{
\item{embeddingMatrix}{A data frame containing an embedding matrix with
identifiers in the index and columns representing embedding dimensions.
It is recommended that you utilize protemalyze::processData to clean the
embedding matrix.}

\item{metric}{The metric to use for the distance matrix calculation. The
default is "euclidean", alternatives must be one of the ones listed in
the parallelDist::parDist documentation.}

\item{threads}{The number of cpu threads that will be used for the
calculation. The default is the maximum amount of cpu threads available
on the system.}
}
\value{
Returns a data frame representing the distance matrix calculated from
    the embedding matrix. Each value in the distance matrix is the distance
    calculated using the specified metric between the row and column
    embeddings. The distance matrix contains protein identifies in the row
    and columns indices, and the diagonal is all zeroes.
}
\description{
A function that computes a distance matrix for an embedding matrix provided
user's choice of distance metric and an embedding matrix derived from a
protein Language Model.
}
\examples{
\dontrun{
# Generate distance matrix with default setings
embeddingMatrix <- eColiEmbeddingMatrix
eColiDistMatrix <- generateDistanceMatrix(embeddingMatrix)

# Generate distance matrix with an alternative metric
eColiDistMatrix <- generateDistanceMatrix(eColiEmbeddingMatrix,
                                          metric="fJaccard")
# Generate distance matrix with a set amount of threads
eColiDistMatrix <- generateDistanceMatrix(eColiEmbeddingMatrix,
                                           threads=4)
}

}
