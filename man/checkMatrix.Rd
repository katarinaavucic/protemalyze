% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkErrors.R
\name{checkMatrix}
\alias{checkMatrix}
\title{Check Errors in Different Types of Matrices}
\usage{
checkMatrix(matrix, type = NULL)
}
\arguments{
\item{matrix}{A data frame or matrix containing the matrix to be validated.}

\item{type}{A string representing the type of the matrix. The deafault is
NULL to perform general matrix checks. For additional checks, set type to
\code{"embeddingMatrix"}, \code{"distanceMatrix"}, or \code{"rankMatrix"}.
This determines which specific checks are applied.}
}
\value{
Returns `TRUE` if all checks pass. If any check fails, an error is
   thrown with a relevant error message indicating the issue (e.g., invalid
   matrix type, non-numeric values, etc.).
}
\description{
A function that checks the validity of different matrix types
(`embeddingMatrix`, `distanceMatrix`, `rankMatrix`). It performs general
checks for all matrix types and specific checks based on the matrix type.
}
\details{
This function performs the following checks:

\itemize{
  \item \strong{General Checks} (for all matrices):
    \itemize{
       \item Verifies that the input is a data frame or matrix.
       \item Ensures that the matrix is not empty and contains numeric
       values.
       \item Checks that the row names of the matrix are non-empty.
    }

  \item \strong{Checks for `embeddingMatrix`}:
    \itemize{
       \item Ensures the matrix has no NA values.
    }

  \item \strong{Checks for `distanceMatrix`}:
    \itemize{
       \item Verifies the matrix is symmetric.
       \item Ensures the matrix has non-empty column names.
       \item Verifies that row names and column names are identical.
       \item Ensures there are no NA values.
.    }

  \item \strong{Checks for `rankMatrix`}:
    \itemize{
       \item Verifies the matrix is symmetric.
       \item Ensures the matrix has non-empty column names.
       \item Verifies that row names and column names are identical.
       \item Ensures there are no NA values.
       \item Ensures all values are non-negative integers (valid ranks).
    }
}
}
\examples{
\dontrun{
# Example of valid embeddingMatrix
checkMatrix(embeddingMatrix, type = "embeddingMatrix")

# Example of valid distanceMatrix
checkMatrix(distanceMatrix, type = "distanceMatrix")

# Example of valid rankMatrix
try(checkMatrix(rankMatrix, type = "rankMatrix"))
}

}
